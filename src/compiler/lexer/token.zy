module compiler.lexer.token

/// Represents all possible token types in Seoggi
type TokenType {
    // Keywords
    FN          // Function declaration
    TYPE        // Type declaration
    IMPORT      // Import statement
    RETURN      // Return statement
    IF          // If statement
    ELSE        // Else clause
    FOR         // For loop
    WHILE       // While loop
    
    // Literals
    NUMBER      // Numeric literal (combines INT_LIT and FLOAT_LIT)
    STRING      // String literal
    IDENTIFIER  // Variable/function names
    
    // Operators and symbols
    PLUS        // +
    MINUS       // -
    STAR        // *
    SLASH       // /
    EQUALS      // =
    
    // Delimiters
    LPAREN      // (
    RPAREN      // )
    LBRACE      // {
    RBRACE      // }
    LBRACKET    // [
    RBRACKET    // ]
    
    // Other
    DOT         // .
    COMMA       // ,
    COLON       // :
    ARROW       // ->
    EOF         // End of file
}

/// Represents a single token in the source code
type Token {
    type: TokenType     // Type of the token
    lexeme: string      // Actual text of the token
    line: int          // Line number in source
    column: int        // Column number in source
}
